{"version":3,"sources":["Components/GoodCard/GoodCard.jsx","Components/GoodList/GoodList.jsx","Components/GoodsFromServer.js","App.jsx","index.jsx"],"names":["GoodCard","good","GoodList","goods","map","goodsFromServer","SORT_FIELD_NAME","SORT_FIELD_LENGTH","App","useState","sortField","setSortField","isReversed","setIsResversed","visibleGoods","prepatedGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","className","onClick","type","cn","ReactDOM","render","document","getElementById"],"mappings":"iPAAaA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,oBAAI,UAAQ,OAAZ,SACGA,KCAQC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,6BACGA,EAAMC,KAAI,SAAAH,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,SCLpBI,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UCHIC,EAAkB,OAClBC,EAAoB,SA0BnB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAqCF,oBAAS,GAA9C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EA3BR,SAA0BX,EAA1B,GAA6D,IAA1BO,EAAyB,EAAzBA,UAAWE,EAAc,EAAdA,WACtCG,EAAa,YAAOZ,GAoB1B,OAlBIO,GACFK,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQR,GACN,KAAKJ,EACH,OAAOW,EAAME,cAAcD,GAC7B,KAAKX,EACH,OAAOU,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXR,GACFG,EAAcM,UAGTN,EAMcO,CACnBjB,EAAiB,CAAEK,YAAWE,eAGhC,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMb,EAAaL,IAC5BmB,KAAK,SACLF,UAAWG,IAAG,SAAU,UAAW,CACjC,WAAYhB,IAAcJ,IAJ9B,iCAUA,wBACEkB,QAAS,kBAAMb,EAAaJ,IAC5BkB,KAAK,SACLF,UAAWG,IAAG,SAAU,UAAW,CACjC,WAAYhB,IAAcH,IAJ9B,4BAUA,wBACEiB,QAAS,kBAAMX,GAAgBD,IAC/Ba,KAAK,SACLF,UAAWG,IAAG,SAAU,aAAc,CACpC,YAAad,IAJjB,sBAUEF,GAAaE,IACb,wBACEY,QAAS,WACPb,EAAa,IACbE,GAAe,IAEjBY,KAAK,SACLF,UAAU,4BANZ,sBAaJ,cAAC,EAAD,CAAUpB,MAAOW,QCrFvBa,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e6a76db2.chunk.js","sourcesContent":["export const GoodCard = ({ good }) => (\n  <li data-cy=\"Good\">\n    {good}\n  </li>\n);\n","import { GoodCard } from '../GoodCard/GoodCard';\n\nexport const GoodList = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <GoodCard good={good} key={good} />\n    ))}\n  </ul>\n);\n","export const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","import { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { GoodList } from './Components/GoodList/GoodList';\nimport { goodsFromServer } from './Components/GoodsFromServer';\n\nconst SORT_FIELD_NAME = 'name';\nconst SORT_FIELD_LENGTH = 'LENGTH';\n\nfunction getPreparedGoods(goods, { sortField, isReversed }) {\n  const prepatedGoods = [...goods];\n\n  if (sortField) {\n    prepatedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_NAME:\n          return good1.localeCompare(good2);\n        case SORT_FIELD_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    prepatedGoods.reverse();\n  }\n\n  return prepatedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsResversed] = useState(false);\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer, { sortField, isReversed },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(SORT_FIELD_NAME)}\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortField !== SORT_FIELD_NAME,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortField !== SORT_FIELD_LENGTH,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setIsResversed(!isReversed)}\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': !isReversed,\n          })}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReversed) && (\n          <button\n            onClick={() => {\n              setSortField('');\n              setIsResversed(false);\n            }}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodList goods={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}